{
  "name": "wip-limiter",
  "version": "2.0.0",
  "description": "Chrome extension to get a visual hint when your Kanban-style WIP limit has been exceeded.",
  "private": true,
  "scripts": {
    "chrome-extension-start": "webpack --mode=development --watch",
    "test": "jest --coverage --collectCoverageFrom='./src/**'"
  },
  "type": "module",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apiology/wip-limiter.git"
  },
  "keywords": [
    "chrome-extension",
    "asana"
  ],
  "author": {
    "name": "Vince Broz",
    "email": "vince@broz.cc",
    "url": "https://github.com/apiology/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/apiology/wip-limiter/issues"
  },
  "homepage": "https://github.com/apiology/wip-limiter#readme",
  "_devDependenciesNotes": "copy-webpack-plugin 10 failed with this - https://stackoverflow.com/questions/70080671/copy-webpack-plugin-error-invalid-host-defined-options.  webpack <5.76 has CVE-2023-28154",
  "devDependencies": {
    "@types/chrome": "^0.0.163",
    "@types/jest": "^29.2.3",
    "@types/jsdom": "^20.0.1",
    "@types/node": "^16.11.7",
    "@typescript-eslint/eslint-plugin": "^5.59.5",
    "@typescript-eslint/parser": "^5.59.5",
    "copy-webpack-plugin": "^9",
    "eslint": "^8.40.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-import-resolver-typescript": "^2.7.1",
    "eslint-plugin-import": "^2.27.5",
    "jest": "^29.5.0",
    "jest-chrome": "^0.8.0",
    "jest-environment-jsdom": "^29.2.1",
    "jest-fetch-mock": "^3.0.3",
    "jest-ts-webcompat-resolver": "^1.0.0",
    "resolve-typescript-plugin": "^1.2.0",
    "ts-jest": "^29.0.5",
    "ts-loader": "^9.3.0",
    "typescript": "^4.9.5",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.5.0"
  },
  "dependencies": {
  },
  "_json5ResolutionsComments": "json5 < 1.0.2 is vulnerable to CVE-2022-46175",
  "resolutions": {
    "**/json5": "^1.0.2"
  },
  "__jest_comments": "https://kulshekhar.github.io/ts-jest/docs/guides/esm-support",
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "resolver": "jest-ts-webcompat-resolver",
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.js$": "$1"
    },
    "transform": {
      "^.+\\.(ts|tsx)$": [
        "ts-jest",
        {
          "useESM": true
        }
      ]
    },
    "setupFilesAfterEnv": [
      "./jest.setup.js"
    ],
    "extensionsToTreatAsEsm": [
      ".ts",
      ".tsx",
      ".jsx"
    ]
  },
  "remarkConfig": {
    "settings": {
      "bullet": "*",
      "listItemIndent": "one"
    },
    "plugins": []
  }
}
